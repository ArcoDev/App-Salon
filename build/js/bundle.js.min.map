{"version":3,"sources":["app.js"],"names":["pagina","cita","nombre","fecha","hora","servicios","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","mostrarResumen","async","resultado","fetch","db","json","forEach","id","precio","nombreServicio","document","createElement","textContent","classList","add","precioServicio","servicioDIV","dataset","idServicio","onclick","seleccionarServicio","appendChild","querySelector","error","console","log","e","elemento","target","tagName","parentElement","contains","remove","eliminarServicio","parseInt","agregarServicio","firstElementChild","nextElementSibling","filter","servicio","servicioObj","seccionAnterior","tabAnterior","querySelectorAll","enlace","addEventListener","preventDefault","paso","resumenDiv","Object","values","includes","noServicios"],"mappings":"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","file":"bundle.js","sourcesContent":["//variables globales \nlet pagina = 1;\nconst cita = {\n    nombre: '',\n    fecha: '',\n    hora: '',\n    servicios: []\n}\ndocument.addEventListener('DOMContentLoaded', function () {\n    iniciarApp();\n});\n\nfunction iniciarApp() {\n    mostrarServicios();\n\n    //Resalta el div actual segun el tab al que se presiona\n    mostrarSeccion();\n\n    //Oculta o mustra seccion segun el tab al que se presiona\n    cambiarSeccion();\n\n    //Paginacion siguiente y anterior\n    paginaSiguiente();\n    paginaAnterior();\n\n    //Comprobar la pagina actual para ocultar o mostrar la paginacion\n    botonesPaginador();\n\n    //Muestra el resumen de la cita o el mensaje de error en caso de que no pase la validacion\n    mostrarResumen();\n\n}\nasync function mostrarServicios() {\n    try {\n        //Utilizar fecth API para extraer informacion de los servicios del json\n        const resultado = await fetch('./servicios.json');\n        const db = await resultado.json();\n        const {\n            servicios\n        } = db;\n\n        //Generar el HTML \n        servicios.forEach(servicios => {\n            const {\n                id,\n                nombre,\n                precio\n            } = servicios;\n\n            //DOM scripting\n\n            //Nombre del servicio\n            const nombreServicio = document.createElement('P');\n            nombreServicio.textContent = nombre;\n            nombreServicio.classList.add('nombre-servicio');\n\n            //Precio del servicio \n            const precioServicio = document.createElement('P');\n            precioServicio.textContent = `$ ${precio}`; //Template string\n            precioServicio.classList.add('precio-servicio');\n\n            //Generar div contenedor del servicio\n            const servicioDIV = document.createElement('DIV');\n            servicioDIV.classList.add('servicio');\n            servicioDIV.dataset.idServicio = id;\n\n\n            //Seleccionar un servicio para la cita y marcarlo con event handler\n            servicioDIV.onclick = seleccionarServicio;\n\n            //inyectar nombre y precio al div\n            servicioDIV.appendChild(nombreServicio);\n            servicioDIV.appendChild(precioServicio);\n\n            //Inyectar en el HTML los servicios \n            document.querySelector('#servicios').appendChild(servicioDIV);\n\n        });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction seleccionarServicio(e) {\n    let elemento;\n    //Forzar que el elemento al cual le damos click sea el div\n    if (e.target.tagName === 'P') {\n        elemento = e.target.parentElement;\n    } else {\n        elemento = e.target;\n    }\n    \n    \n    if (elemento.classList.contains('seleccionado')) {\n        elemento.classList.remove('seleccionado');\n        const id = parseInt(elemento.dataset.idServicio);\n        eliminarServicio(id);\n    } else {\n        elemento.classList.add('seleccionado');\n        //travesint del dom (recorrer el dom)\n        const servicioObj =  {\n            id: parseInt(elemento.dataset.idServicio),\n            nombre: elemento.firstElementChild.textContent,\n            precio: elemento.firstElementChild.nextElementSibling.textContent\n        }\n        //console.log(servicioObj);\n        agregarServicio(servicioObj);\n    }\n}\nfunction eliminarServicio(id) {\n    const { servicios } = cita;\n    cita.servicios = servicios.filter( servicio => servicio.id !== id);\n    console.log(cita);\n}\nfunction agregarServicio(servicioObj) {\n    const { servicios } = cita;\n    //con los 3 puntos, copiamos el arreglo y le pasamos la informacion al nuevo objeto\n    cita.servicios = [...servicios, servicioObj];\n    console.log(cita);\n\n}\nfunction mostrarSeccion() {\n\n    //ELiminar mostrar-seccion, de la seccion anterior\n    const seccionAnterior = document.querySelector('.mostrar-seccion');\n    if (seccionAnterior) {\n        seccionAnterior.classList.remove('mostrar-seccion');\n    }\n    //Seccion actual en la aplicacion\n    const seccionActual = document.querySelector(`#paso-${pagina}`);\n    seccionActual.classList.add('mostrar-seccion');\n\n    //Eliminar la clase de actual en el tab anterior\n    const tabAnterior = document.querySelector('.tabs .actual');\n    if (tabAnterior) {\n        tabAnterior.classList.remove('actual');\n    }\n\n    //Resalta el tab actual \n    const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\n    tab.classList.add('actual');\n}\n\nfunction cambiarSeccion() {\n    const enlaces = document.querySelectorAll('.tabs button');\n    enlaces.forEach(enlace => {\n        enlace.addEventListener('click', e => {\n            e.preventDefault();\n            pagina = parseInt(e.target.dataset.paso);\n            mostrarSeccion();\n            botonesPaginador();\n        });\n    });\n}\n\nfunction paginaSiguiente() {\n    const paginaSiguiente = document.querySelector('#siguiente');\n    paginaSiguiente.addEventListener('click', () => {\n        pagina++;\n        botonesPaginador();\n    });\n}\n\nfunction paginaAnterior() {\n    const paginaAnterior = document.querySelector('#anterior');\n    paginaAnterior.addEventListener('click', () => {\n        pagina--;\n        botonesPaginador();\n\n    });\n}\n\nfunction botonesPaginador() {\n    const paginaSiguiente = document.querySelector('#siguiente');\n    const paginaAnterior = document.querySelector('#anterior');\n\n    if(pagina == 1) {\n        paginaAnterior.classList.add('ocultar');\n        paginaSiguiente.classList.remove('ocultar');\n    } else if (pagina == 3) {\n        paginaSiguiente.classList.add('ocultar');\n        paginaAnterior.classList.remove('ocultar');\n    } else {\n        paginaAnterior.classList.remove('ocultar');\n        paginaSiguiente.classList.remove('ocultar');\n    }\n\n    mostrarSeccion(); //Cambia la seccion que se muestra, por la de la pagina actual\n}\nfunction mostrarResumen() {\n    \n    //Destructirung extarer la informacion del objeto\n    const { nombre, fecha, hora, servicios } = cita;\n    \n    //Seleccionar el resumen\n    const resumenDiv = document.querySelector('.contenido-resumen');\n    //validacion para saber si el objeto esta vacio, extraer los valores del objeto\n    if(Object.values(cita).includes('')) {\n        const noServicios = document.createElement('P');\n        noServicios.textContent = 'Faltan datos de servicios, hora, fecha o nombre';\n        noServicios.classList.add('invalidar-cita');\n\n        //Agregar a resuemn div\n        resumenDiv.appendChild(noServicios);\n    }\n\n}"]}