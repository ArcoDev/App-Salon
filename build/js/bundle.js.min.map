{"version":3,"sources":["app.js"],"names":["pagina","cita","nombre","fecha","hora","servicios","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","mostrarResumen","async","resultado","fetch","db","json","forEach","id","precio","nombreServicio","document","createElement","textContent","classList","add","precioServicio","servicioDIV","dataset","idServicio","onclick","seleccionarServicio","appendChild","querySelector","error","console","log","e","elemento","target","tagName","parentElement","contains","remove","seccionAnterior","tabAnterior","querySelectorAll","enlace","addEventListener","preventDefault","parseInt","paso","resumenDiv","Object","values","includes","noServicios"],"mappings":"AACA,IAAAA,OAAA,EACA,MAAAC,KAAA,CACAC,OAAA,GACAC,MAAA,GACAC,KAAA,GACAC,UAAA,IAMA,SAAAC,aACAC,mBAGAC,iBAGAC,iBAGAC,kBACAC,iBAGAC,mBAGAC,iBAGAC,eAAAP,mBACA,IAEA,MAAAQ,QAAAC,MAAA,oBACAC,QAAAF,EAAAG,QACAb,UACAA,GACAY,EAGAZ,EAAAc,QAAAd,IACA,MAAAe,GACAA,EAAAlB,OACAA,EAAAmB,OACAA,GACAhB,EAKAiB,EAAAC,SAAAC,cAAA,KACAF,EAAAG,YAAAvB,EACAoB,EAAAI,UAAAC,IAAA,mBAGA,MAAAC,EAAAL,SAAAC,cAAA,KACAI,EAAAH,YAAA,KAAAJ,EACAO,EAAAF,UAAAC,IAAA,mBAGA,MAAAE,EAAAN,SAAAC,cAAA,OACAK,EAAAH,UAAAC,IAAA,YACAE,EAAAC,QAAAC,WAAAX,EAIAS,EAAAG,QAAAC,oBAGAJ,EAAAK,YAAAZ,GACAO,EAAAK,YAAAN,GAGAL,SAAAY,cAAA,cAAAD,YAAAL,KAGA,MAAAO,GACAC,QAAAC,IAAAF,IAIA,SAAAH,oBAAAM,GACA,IAAAC,EAGAA,EADA,MAAAD,EAAAE,OAAAC,QACAH,EAAAE,OAAAE,cAEAJ,EAAAE,OAGAD,EAAAd,UAAAkB,SAAA,gBACAJ,EAAAd,UAAAmB,OAAA,gBAEAL,EAAAd,UAAAC,IAAA,gBAKA,SAAAnB,iBAGA,MAAAsC,EAAAvB,SAAAY,cAAA,oBACAW,GACAA,EAAApB,UAAAmB,OAAA,mBAGAtB,SAAAY,cAAA,SAAAnC,QACA0B,UAAAC,IAAA,mBAGA,MAAAoB,EAAAxB,SAAAY,cAAA,iBACAY,GACAA,EAAArB,UAAAmB,OAAA,UAIAtB,SAAAY,cAAA,eAAAnC,YACA0B,UAAAC,IAAA,UAGA,SAAAlB,iBACAc,SAAAyB,iBAAA,gBACA7B,QAAA8B,IACAA,EAAAC,iBAAA,QAAAX,IACAA,EAAAY,iBACAnD,OAAAoD,SAAAb,EAAAE,OAAAX,QAAAuB,MACA7C,iBACAI,uBAKA,SAAAF,kBACAa,SAAAY,cAAA,cACAe,iBAAA,QAAA,KACAlD,SACAY,qBAIA,SAAAD,iBACAY,SAAAY,cAAA,aACAe,iBAAA,QAAA,KACAlD,SACAY,qBAKA,SAAAA,mBACA,MAAAF,EAAAa,SAAAY,cAAA,cACAxB,EAAAY,SAAAY,cAAA,aAEA,GAAAnC,QACAW,EAAAe,UAAAC,IAAA,WACAjB,EAAAgB,UAAAmB,OAAA,YACA,GAAA7C,QACAU,EAAAgB,UAAAC,IAAA,WACAhB,EAAAe,UAAAmB,OAAA,aAEAlC,EAAAe,UAAAmB,OAAA,WACAnC,EAAAgB,UAAAmB,OAAA,YAGArC,iBAEA,SAAAK,iBAGA,MAAAX,OAAAA,EAAAC,MAAAA,EAAAC,KAAAA,EAAAC,UAAAA,GAAAJ,KAGAqD,EAAA/B,SAAAY,cAAA,sBAEA,GAAAoB,OAAAC,OAAAvD,MAAAwD,SAAA,IAAA,CACA,MAAAC,EAAAnC,SAAAC,cAAA,KACAkC,EAAAjC,YAAA,kDACAiC,EAAAhC,UAAAC,IAAA,kBAGA2B,EAAApB,YAAAwB,IA9KAnC,SAAA2B,iBAAA,oBAAA,WACA5C","file":"bundle.js","sourcesContent":["//variables globales \r\nlet pagina = 1;\r\nconst cita = {\r\n    nombre: '',\r\n    fecha: '',\r\n    hora: '',\r\n    servicios: []\r\n}\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {\r\n    mostrarServicios();\r\n\r\n    //Resalta el div actual segun el tab al que se presiona\r\n    mostrarSeccion();\r\n\r\n    //Oculta o mustra seccion segun el tab al que se presiona\r\n    cambiarSeccion();\r\n\r\n    //Paginacion siguiente y anterior\r\n    paginaSiguiente();\r\n    paginaAnterior();\r\n\r\n    //Comprobar la pagina actual para ocultar o mostrar la paginacion\r\n    botonesPaginador();\r\n\r\n    //Muestra el resumen de la cita o el mensaje de error en caso de que no pase la validacion\r\n    mostrarResumen();\r\n\r\n}\r\nasync function mostrarServicios() {\r\n    try {\r\n        //Utilizar fecth API para extraer informacion de los servicios del json\r\n        const resultado = await fetch('./servicios.json');\r\n        const db = await resultado.json();\r\n        const {\r\n            servicios\r\n        } = db;\r\n\r\n        //Generar el HTML \r\n        servicios.forEach(servicios => {\r\n            const {\r\n                id,\r\n                nombre,\r\n                precio\r\n            } = servicios;\r\n\r\n            //DOM scripting\r\n\r\n            //Nombre del servicio\r\n            const nombreServicio = document.createElement('P');\r\n            nombreServicio.textContent = nombre;\r\n            nombreServicio.classList.add('nombre-servicio');\r\n\r\n            //Precio del servicio \r\n            const precioServicio = document.createElement('P');\r\n            precioServicio.textContent = `$ ${precio}`; //Template string\r\n            precioServicio.classList.add('precio-servicio');\r\n\r\n            //Generar div contenedor del servicio\r\n            const servicioDIV = document.createElement('DIV');\r\n            servicioDIV.classList.add('servicio');\r\n            servicioDIV.dataset.idServicio = id;\r\n\r\n\r\n            //Seleccionar un servicio para la cita y marcarlo con event handler\r\n            servicioDIV.onclick = seleccionarServicio;\r\n\r\n            //inyectar nombre y precio al div\r\n            servicioDIV.appendChild(nombreServicio);\r\n            servicioDIV.appendChild(precioServicio);\r\n\r\n            //Inyectar en el HTML los servicios \r\n            document.querySelector('#servicios').appendChild(servicioDIV);\r\n\r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction seleccionarServicio(e) {\r\n    let elemento;\r\n    //Forzar que el elemento al cual le damos click sea el div\r\n    if (e.target.tagName === 'P') {\r\n        elemento = e.target.parentElement;\r\n    } else {\r\n        elemento = e.target;\r\n    }\r\n    //console.log(elemento.dataset.idServicio);\r\n    if (elemento.classList.contains('seleccionado')) {\r\n        elemento.classList.remove('seleccionado');\r\n    } else {\r\n        elemento.classList.add('seleccionado');\r\n    }\r\n    //elemento.classList.toggle('seleccionado');\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n\r\n    //ELiminar mostrar-seccion, de la seccion anterior\r\n    const seccionAnterior = document.querySelector('.mostrar-seccion');\r\n    if (seccionAnterior) {\r\n        seccionAnterior.classList.remove('mostrar-seccion');\r\n    }\r\n    //Seccion actual en la aplicacion\r\n    const seccionActual = document.querySelector(`#paso-${pagina}`);\r\n    seccionActual.classList.add('mostrar-seccion');\r\n\r\n    //Eliminar la clase de actual en el tab anterior\r\n    const tabAnterior = document.querySelector('.tabs .actual');\r\n    if (tabAnterior) {\r\n        tabAnterior.classList.remove('actual');\r\n    }\r\n\r\n    //Resalta el tab actual \r\n    const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n    tab.classList.add('actual');\r\n}\r\n\r\nfunction cambiarSeccion() {\r\n    const enlaces = document.querySelectorAll('.tabs button');\r\n    enlaces.forEach(enlace => {\r\n        enlace.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            pagina = parseInt(e.target.dataset.paso);\r\n            mostrarSeccion();\r\n            botonesPaginador();\r\n        });\r\n    });\r\n}\r\n\r\nfunction paginaSiguiente() {\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n    paginaSiguiente.addEventListener('click', () => {\r\n        pagina++;\r\n        botonesPaginador();\r\n    });\r\n}\r\n\r\nfunction paginaAnterior() {\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n    paginaAnterior.addEventListener('click', () => {\r\n        pagina--;\r\n        botonesPaginador();\r\n\r\n    });\r\n}\r\n\r\nfunction botonesPaginador() {\r\n    const paginaSiguiente = document.querySelector('#siguiente');\r\n    const paginaAnterior = document.querySelector('#anterior');\r\n\r\n    if(pagina == 1) {\r\n        paginaAnterior.classList.add('ocultar');\r\n        paginaSiguiente.classList.remove('ocultar');\r\n    } else if (pagina == 3) {\r\n        paginaSiguiente.classList.add('ocultar');\r\n        paginaAnterior.classList.remove('ocultar');\r\n    } else {\r\n        paginaAnterior.classList.remove('ocultar');\r\n        paginaSiguiente.classList.remove('ocultar');\r\n    }\r\n\r\n    mostrarSeccion(); //Cambia la seccion que se muestra, por la de la pagina actual\r\n}\r\nfunction mostrarResumen() {\r\n    \r\n    //Destructirung extarer la informacion del objeto\r\n    const { nombre, fecha, hora, servicios } = cita;\r\n    \r\n    //Seleccionar el resumen\r\n    const resumenDiv = document.querySelector('.contenido-resumen');\r\n    //validacion para saber si el objeto esta vacio, extraer los valores del objeto\r\n    if(Object.values(cita).includes('')) {\r\n        const noServicios = document.createElement('P');\r\n        noServicios.textContent = 'Faltan datos de servicios, hora, fecha o nombre';\r\n        noServicios.classList.add('invalidar-cita');\r\n\r\n        //Agregar a resuemn div\r\n        resumenDiv.appendChild(noServicios);\r\n    }\r\n\r\n}"]}